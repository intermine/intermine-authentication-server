package org.intermine.security.authserver.model;


import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Model class for userconnection table.
 *
 * @author Rahul Yadav
 *
 */
@Entity
@Table(name = "userconnection")
public class UserConnection implements Serializable {

    /**
     * Unique identifier for Serializable class.
     */
    private static final long serialVersionUID = 1L;

    /**
     *Auto generated unique userId.
     */
    @Id
    @Column(name = "Userid", length = 255, nullable = false)
    private String userId;

    /**
     *3rd party Oauth provider unique Id
     */
    @Id
    @Column(name = "Providerid", length = 255, nullable = false)
    private String providerId;

    /**
     *user Id of user who logged in the particular provider
     */
    @Id
    @Column(name = "Provideruserid", length = 255, nullable = false)
    private String providerUserId;

    @Column(name = "Rank", nullable = false)
    private int rank;

    /**
     *Name of the user to display
     */
    @Column(name = "Displayname", length = 255, nullable = true)
    private String displayName;

    /**
     *Url of user profile on 3rd party Oauth provider
     */
    @Column(name = "Profileurl", length = 512, nullable = true)
    private String profileUrl;

    /**
     *Profile image url of user
     */
    @Column(name = "Imageurl", length = 512, nullable = true)
    private String imageUrl;

    /**
     *Access token for the user generated by 3rd party OAuth provider
     */
    @Column(name = "Accesstoken", length = 512, nullable = true)
    private String accessToken;

    /**
     *Secret credentials
     */
    @Column(name = "Secret", length = 512, nullable = true)
    private String secret;

    /**
     *Refresh token
     */
    @Column(name = "Refreshtoken", length = 512, nullable = true)
    private String refreshToken;

    /**
     *Tokens expire time in seconds
     */
    @Column(name = "Expiretime", nullable = true)
    private Long expireTime;

    //Todo Implement getter and setter method for all above field when Configure IM auth server with any other 3rd party OAuth provider

}

